%YAML 1.2
---
# http://www.sublimetext.com/docs/3/syntax.html
name: XYplorer
file_extensions:
  - xys
  - xyi
  - inc
scope: source.xys
contexts:
  main:
    - match: (?<!tp:)//.*?$
      scope: comment.line.xys
    - match: /\*
      push:
        - meta_scope: comment.block.xys
        - match: \*/
          pop: true
    - match: (?i)\b(?:abs|asc|attrstamp|base64decode|base64encode|caller|catalogreport|ceil|cell|chr|colorfilter|columnlayout|compare|confirm|copier|ctbicon|ctbname|ctbstate|datediff|eval|exists|extracttext|extratag|filesequal|filesize|filetype|floor|folderreport|foldersize|format|formatbytes|formatdate|formatlist|get|getinfo|getkey|getpathcomponent|getsectionlist|gettoken|gettokenindex|hash|hexdump|hextodec|html|input|inputfile|inputfolder|inputselect|isset|isunicode|listfolder|listpane|loadlayout|md5|new|now|paperfolder|popupmenu|property|quote|rand|readfile|readurl|recase|regexmatches|regexreplace|renameitem|replace|replacelist|report|resolvepath|round|row|runret|savethumb|self|setcolumns|seticons|setlayout|strlen|strpos|strrepeat|substr|sync|tab|tabset|tagitems|taglist|toolbar|trim|tweak|urldecode|urlencode|utf8decode|utf8encode|writefile|zip_add|zip_extract|zip_list)(?=\s*\()
      scope: entity.name.function.xys
    - match: (?i)\b(?:assert|backupto|beep|box|br|button|call|catalogload|charview|comparehash|comment|copy|copyas|copydata|copyitem|copytext|copyto|delete|deletefile|download|echo|edittags|end|enumshellfolderitems|error|escapeunicode|exist|exit|filter|focus|fresh|freshhere|global|goto|hashlist|help|highlight|incr|info|internetflags|load|loadsearch|loadtree|logchange|logon|logtofile|makecoffee|moveas|moveto|msecs|msg|open|openwith|perm|popupmainmenu|quickfileview|readpv|releaseglobals|rename|return|rotate|rtfm|run|savesettings|screen|sel|selpos|selectitems|selfilter|seltab|sendkeys|set|setkey|setting|settingp|showhash|showshellprops|snippet|sortby|sound|status|sub|swapnames|sysicons|tag|text|timestamp|unset|unthumb|userbutton|wait|winpos|winsize|wipe|wmcopydata|writepv)(?=\s)
      scope: entity.name.function.xys
    - match: (?i)\b(?:step|unstep|break|continue|while|if|else|elseif|foreach)\b
      scope: keyword.control.xys
    - match: '(?<!\w)#1?\d{3}(?!\w)'
      scope: entity.name.function.CommandID.xys
    - match: (?i)^\s*(include)\s+(.+?)\s*;?\s*$
      captures:
        1: keyword.control.xys
        2: string.other.INC.xys
    - match: (?i)^(namespace)\s+(\w+)$
      comment: namespace definition
      captures:
        1: keyword.control.xys
        2: meta.class.NS.xys
    - match: (?i)^\s*(function)\s+(\w+)(?=\s*\()
      comment: User-Defined function declaration
      captures:
        1: keyword.control.xys
        2: meta.class.UDF.xys
    - match: '\|:\w+|(?i)\$[a-z_]\w*|\{:(Text|Image|Photo|Audio|Video|Media|Font|Vector|Web|Office|Archive|Executable)\}'
      scope: variable.parameter.xys
    - match: '(?i)<[ .,\*\|\#\:\-\+\w]+>|%[\w-]+%'
      scope: variable.parameter.native.xys
    - match: '(?<=^|[\s(,=<>/;%^+!&|\-\*\\])((?:-|\+)?)(?:\d+\.\d+)|(?:\.?\d+)'
      scope: constant.numeric.xys
    - match: '([\!)(){},]|[\*\+-\/\^%]|\sUnLikeI?\s|\sLikeI?\s|\sAND\s|\sOR\s|\sXOR\s|\sNOT\s|\s\|\|\s|\B-\B|=|\s+\.\s+|(?<!\w)>|<(?![\w<])|\B&?\W&\B)'
      scope: keyword.operator.xys
    - match: \b(?:(\w+)::)?(\w+)(?=\s*\()
      comment: scope out unrecog functions to allow ctxhelp goto def
      captures:
        1: entity.name.section.NS.xys
        2: entity.name.function.UDF.xys
    - match: "<{3}'([^#].*)'$"
      push:
        - meta_scope: string.unquoted.nowdoc.xys
        - match: ^\1;?$
          pop: true
    - match: "<{3}#'(.*)'$"
      push:
        - meta_scope: string.unquoted.nowdoc.xys
        - match: '#\1'
          pop: true
    - match: "<{3}(#.*)$"
      push:
        - meta_scope: string.unquoted.heredoc.xys
        - match: \1
          pop: true
        - match: '(?i)\$[a-z_]\w*'
          scope: variable.parameter.xys
        - match: '(?i)<[ .,\*\|\#\:\-\+\w]+>|%[\w-]+%'
          scope: variable.parameter.native.xys
    - match: "<{3}([^#](.*))$"
      push:
        - meta_scope: string.unquoted.heredoc.xys
        - match: ^\1;?$
          pop: true
        - match: '(?i)\$[a-z_]\w*'
          scope: variable.parameter.xys
        - match: '(?i)<[ .,\*\|\#\:\-\+\w]+>|%[\w-]+%'
          scope: variable.parameter.native.xys
    - match: ("|')
      captures:
        1: string.quoted.xys
      push:
        - meta_scope: string.quoted.xys
        - match: '(\1)\1{0}'
          captures:
            1: string.quoted.xys
          pop: true
        - match: '\|:\w+|(?i)\$[a-z_]\w*'
          scope: variable.parameter.xys
        - match: '<[ .,\*\|\#\:\-\+\w]+>|%[A-Za-z0-9()_-]+%'
          scope: variable.parameter.native.xys
        - match: '(?<!\w)#1?\d{3}(?!\w)'
          scope: entity.name.function.CommandID.xys
